apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: henock001/auth:v1
          ports:
            - containerPort: 3004
---
apiVersion: v1
kind: Service
metadata:
  name: auth
spec:
  selector:
    app: auth
  ports:
    - port: 3004
      targetPort: 3004
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cotes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cotes
  template:
    metadata:
      labels:
        app: cotes
    spec:
      containers:
        - name: cotes
          image: henock001/cotes:v1
          ports:
            - containerPort: 3003
---
apiVersion: v1
kind: Service
metadata:
  name: cotes
spec:
  selector:
    app: cotes
  ports:
    - port: 3003
      targetPort: 3003
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enseignement
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enseignement
  template:
    metadata:
      labels:
        app: enseignement
    spec:
      containers:
        - name: enseignement
          image: henock001/enseignement:v1
          ports:
            - containerPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: enseignement
spec:
  selector:
    app: enseignement
  ports:
    - port: 3002
      targetPort: 3002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inscription
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inscription
  template:
    metadata:
      labels:
        app: inscription
    spec:
      containers:
        - name: inscription
          image: henock001/inscription:v1
          ports:
            - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: inscription
spec:
  selector:
    app: inscription
  ports:
    - port: 3001
      targetPort: 3001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
        - name: kong
          image: kong:3.6
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: "/usr/local/kong/declarative/kong.yml"
            - name: KONG_PROXY_LISTEN
              value: "0.0.0.0:8000"
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8001"
          volumeMounts:
              - name: kong-config
                mountPath: /usr/local/kong/declarative/kong.yml
                subPath: kong.yml
      volumes:
        - name: kong-config
          configMap:
            name: kong-declarative-config
---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
spec:
  selector:
    app: kong
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-lb
spec:
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
